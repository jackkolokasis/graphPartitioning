package org.apache.spark.sql.catalyst.parser;
/**
 * The post-processor validates &amp; cleans-up the parse tree during the parse process.
 */
public  class PostProcessor {
  /** Remove the back ticks from an Identifier. */
  static public  void exitQuotedIdentifier (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QuotedIdentifierContext ctx)  { throw new RuntimeException(); }
  /** Treat non-reserved keywords as Identifiers. */
  static public  void exitNonReserved (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NonReservedContext ctx)  { throw new RuntimeException(); }
  static private  void replaceTokenByIdentifier (org.antlr.v4.runtime.ParserRuleContext ctx, int stripMargins, scala.Function1<org.antlr.v4.runtime.CommonToken, org.antlr.v4.runtime.CommonToken> f)  { throw new RuntimeException(); }
  static public  void enterSingleStatement (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SingleStatementContext ctx)  { throw new RuntimeException(); }
  static public  void exitSingleStatement (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SingleStatementContext ctx)  { throw new RuntimeException(); }
  static public  void enterSingleExpression (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SingleExpressionContext ctx)  { throw new RuntimeException(); }
  static public  void exitSingleExpression (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SingleExpressionContext ctx)  { throw new RuntimeException(); }
  static public  void enterSingleTableIdentifier (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SingleTableIdentifierContext ctx)  { throw new RuntimeException(); }
  static public  void exitSingleTableIdentifier (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SingleTableIdentifierContext ctx)  { throw new RuntimeException(); }
  static public  void enterSingleDataType (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SingleDataTypeContext ctx)  { throw new RuntimeException(); }
  static public  void exitSingleDataType (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SingleDataTypeContext ctx)  { throw new RuntimeException(); }
  static public  void enterStatementDefault (org.apache.spark.sql.catalyst.parser.SqlBaseParser.StatementDefaultContext ctx)  { throw new RuntimeException(); }
  static public  void exitStatementDefault (org.apache.spark.sql.catalyst.parser.SqlBaseParser.StatementDefaultContext ctx)  { throw new RuntimeException(); }
  static public  void enterUse (org.apache.spark.sql.catalyst.parser.SqlBaseParser.UseContext ctx)  { throw new RuntimeException(); }
  static public  void exitUse (org.apache.spark.sql.catalyst.parser.SqlBaseParser.UseContext ctx)  { throw new RuntimeException(); }
  static public  void enterCreateDatabase (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateDatabaseContext ctx)  { throw new RuntimeException(); }
  static public  void exitCreateDatabase (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateDatabaseContext ctx)  { throw new RuntimeException(); }
  static public  void enterSetDatabaseProperties (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SetDatabasePropertiesContext ctx)  { throw new RuntimeException(); }
  static public  void exitSetDatabaseProperties (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SetDatabasePropertiesContext ctx)  { throw new RuntimeException(); }
  static public  void enterDropDatabase (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DropDatabaseContext ctx)  { throw new RuntimeException(); }
  static public  void exitDropDatabase (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DropDatabaseContext ctx)  { throw new RuntimeException(); }
  static public  void enterCreateTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateTableContext ctx)  { throw new RuntimeException(); }
  static public  void exitCreateTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateTableContext ctx)  { throw new RuntimeException(); }
  static public  void enterCreateHiveTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateHiveTableContext ctx)  { throw new RuntimeException(); }
  static public  void exitCreateHiveTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateHiveTableContext ctx)  { throw new RuntimeException(); }
  static public  void enterCreateTableLike (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateTableLikeContext ctx)  { throw new RuntimeException(); }
  static public  void exitCreateTableLike (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateTableLikeContext ctx)  { throw new RuntimeException(); }
  static public  void enterAnalyze (org.apache.spark.sql.catalyst.parser.SqlBaseParser.AnalyzeContext ctx)  { throw new RuntimeException(); }
  static public  void exitAnalyze (org.apache.spark.sql.catalyst.parser.SqlBaseParser.AnalyzeContext ctx)  { throw new RuntimeException(); }
  static public  void enterAddTableColumns (org.apache.spark.sql.catalyst.parser.SqlBaseParser.AddTableColumnsContext ctx)  { throw new RuntimeException(); }
  static public  void exitAddTableColumns (org.apache.spark.sql.catalyst.parser.SqlBaseParser.AddTableColumnsContext ctx)  { throw new RuntimeException(); }
  static public  void enterRenameTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RenameTableContext ctx)  { throw new RuntimeException(); }
  static public  void exitRenameTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RenameTableContext ctx)  { throw new RuntimeException(); }
  static public  void enterSetTableProperties (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SetTablePropertiesContext ctx)  { throw new RuntimeException(); }
  static public  void exitSetTableProperties (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SetTablePropertiesContext ctx)  { throw new RuntimeException(); }
  static public  void enterUnsetTableProperties (org.apache.spark.sql.catalyst.parser.SqlBaseParser.UnsetTablePropertiesContext ctx)  { throw new RuntimeException(); }
  static public  void exitUnsetTableProperties (org.apache.spark.sql.catalyst.parser.SqlBaseParser.UnsetTablePropertiesContext ctx)  { throw new RuntimeException(); }
  static public  void enterChangeColumn (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ChangeColumnContext ctx)  { throw new RuntimeException(); }
  static public  void exitChangeColumn (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ChangeColumnContext ctx)  { throw new RuntimeException(); }
  static public  void enterSetTableSerDe (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SetTableSerDeContext ctx)  { throw new RuntimeException(); }
  static public  void exitSetTableSerDe (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SetTableSerDeContext ctx)  { throw new RuntimeException(); }
  static public  void enterAddTablePartition (org.apache.spark.sql.catalyst.parser.SqlBaseParser.AddTablePartitionContext ctx)  { throw new RuntimeException(); }
  static public  void exitAddTablePartition (org.apache.spark.sql.catalyst.parser.SqlBaseParser.AddTablePartitionContext ctx)  { throw new RuntimeException(); }
  static public  void enterRenameTablePartition (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RenameTablePartitionContext ctx)  { throw new RuntimeException(); }
  static public  void exitRenameTablePartition (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RenameTablePartitionContext ctx)  { throw new RuntimeException(); }
  static public  void enterDropTablePartitions (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DropTablePartitionsContext ctx)  { throw new RuntimeException(); }
  static public  void exitDropTablePartitions (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DropTablePartitionsContext ctx)  { throw new RuntimeException(); }
  static public  void enterSetTableLocation (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SetTableLocationContext ctx)  { throw new RuntimeException(); }
  static public  void exitSetTableLocation (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SetTableLocationContext ctx)  { throw new RuntimeException(); }
  static public  void enterRecoverPartitions (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RecoverPartitionsContext ctx)  { throw new RuntimeException(); }
  static public  void exitRecoverPartitions (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RecoverPartitionsContext ctx)  { throw new RuntimeException(); }
  static public  void enterDropTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DropTableContext ctx)  { throw new RuntimeException(); }
  static public  void exitDropTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DropTableContext ctx)  { throw new RuntimeException(); }
  static public  void enterCreateView (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateViewContext ctx)  { throw new RuntimeException(); }
  static public  void exitCreateView (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateViewContext ctx)  { throw new RuntimeException(); }
  static public  void enterCreateTempViewUsing (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateTempViewUsingContext ctx)  { throw new RuntimeException(); }
  static public  void exitCreateTempViewUsing (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateTempViewUsingContext ctx)  { throw new RuntimeException(); }
  static public  void enterAlterViewQuery (org.apache.spark.sql.catalyst.parser.SqlBaseParser.AlterViewQueryContext ctx)  { throw new RuntimeException(); }
  static public  void exitAlterViewQuery (org.apache.spark.sql.catalyst.parser.SqlBaseParser.AlterViewQueryContext ctx)  { throw new RuntimeException(); }
  static public  void enterCreateFunction (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateFunctionContext ctx)  { throw new RuntimeException(); }
  static public  void exitCreateFunction (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateFunctionContext ctx)  { throw new RuntimeException(); }
  static public  void enterDropFunction (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DropFunctionContext ctx)  { throw new RuntimeException(); }
  static public  void exitDropFunction (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DropFunctionContext ctx)  { throw new RuntimeException(); }
  static public  void enterExplain (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ExplainContext ctx)  { throw new RuntimeException(); }
  static public  void exitExplain (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ExplainContext ctx)  { throw new RuntimeException(); }
  static public  void enterShowTables (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowTablesContext ctx)  { throw new RuntimeException(); }
  static public  void exitShowTables (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowTablesContext ctx)  { throw new RuntimeException(); }
  static public  void enterShowTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowTableContext ctx)  { throw new RuntimeException(); }
  static public  void exitShowTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowTableContext ctx)  { throw new RuntimeException(); }
  static public  void enterShowDatabases (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowDatabasesContext ctx)  { throw new RuntimeException(); }
  static public  void exitShowDatabases (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowDatabasesContext ctx)  { throw new RuntimeException(); }
  static public  void enterShowTblProperties (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowTblPropertiesContext ctx)  { throw new RuntimeException(); }
  static public  void exitShowTblProperties (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowTblPropertiesContext ctx)  { throw new RuntimeException(); }
  static public  void enterShowColumns (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowColumnsContext ctx)  { throw new RuntimeException(); }
  static public  void exitShowColumns (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowColumnsContext ctx)  { throw new RuntimeException(); }
  static public  void enterShowPartitions (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowPartitionsContext ctx)  { throw new RuntimeException(); }
  static public  void exitShowPartitions (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowPartitionsContext ctx)  { throw new RuntimeException(); }
  static public  void enterShowFunctions (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowFunctionsContext ctx)  { throw new RuntimeException(); }
  static public  void exitShowFunctions (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowFunctionsContext ctx)  { throw new RuntimeException(); }
  static public  void enterShowCreateTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowCreateTableContext ctx)  { throw new RuntimeException(); }
  static public  void exitShowCreateTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ShowCreateTableContext ctx)  { throw new RuntimeException(); }
  static public  void enterDescribeFunction (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DescribeFunctionContext ctx)  { throw new RuntimeException(); }
  static public  void exitDescribeFunction (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DescribeFunctionContext ctx)  { throw new RuntimeException(); }
  static public  void enterDescribeDatabase (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DescribeDatabaseContext ctx)  { throw new RuntimeException(); }
  static public  void exitDescribeDatabase (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DescribeDatabaseContext ctx)  { throw new RuntimeException(); }
  static public  void enterDescribeTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DescribeTableContext ctx)  { throw new RuntimeException(); }
  static public  void exitDescribeTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DescribeTableContext ctx)  { throw new RuntimeException(); }
  static public  void enterRefreshTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RefreshTableContext ctx)  { throw new RuntimeException(); }
  static public  void exitRefreshTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RefreshTableContext ctx)  { throw new RuntimeException(); }
  static public  void enterRefreshResource (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RefreshResourceContext ctx)  { throw new RuntimeException(); }
  static public  void exitRefreshResource (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RefreshResourceContext ctx)  { throw new RuntimeException(); }
  static public  void enterCacheTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CacheTableContext ctx)  { throw new RuntimeException(); }
  static public  void exitCacheTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CacheTableContext ctx)  { throw new RuntimeException(); }
  static public  void enterUncacheTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.UncacheTableContext ctx)  { throw new RuntimeException(); }
  static public  void exitUncacheTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.UncacheTableContext ctx)  { throw new RuntimeException(); }
  static public  void enterClearCache (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ClearCacheContext ctx)  { throw new RuntimeException(); }
  static public  void exitClearCache (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ClearCacheContext ctx)  { throw new RuntimeException(); }
  static public  void enterLoadData (org.apache.spark.sql.catalyst.parser.SqlBaseParser.LoadDataContext ctx)  { throw new RuntimeException(); }
  static public  void exitLoadData (org.apache.spark.sql.catalyst.parser.SqlBaseParser.LoadDataContext ctx)  { throw new RuntimeException(); }
  static public  void enterTruncateTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TruncateTableContext ctx)  { throw new RuntimeException(); }
  static public  void exitTruncateTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TruncateTableContext ctx)  { throw new RuntimeException(); }
  static public  void enterRepairTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RepairTableContext ctx)  { throw new RuntimeException(); }
  static public  void exitRepairTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RepairTableContext ctx)  { throw new RuntimeException(); }
  static public  void enterManageResource (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ManageResourceContext ctx)  { throw new RuntimeException(); }
  static public  void exitManageResource (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ManageResourceContext ctx)  { throw new RuntimeException(); }
  static public  void enterFailNativeCommand (org.apache.spark.sql.catalyst.parser.SqlBaseParser.FailNativeCommandContext ctx)  { throw new RuntimeException(); }
  static public  void exitFailNativeCommand (org.apache.spark.sql.catalyst.parser.SqlBaseParser.FailNativeCommandContext ctx)  { throw new RuntimeException(); }
  static public  void enterSetConfiguration (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SetConfigurationContext ctx)  { throw new RuntimeException(); }
  static public  void exitSetConfiguration (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SetConfigurationContext ctx)  { throw new RuntimeException(); }
  static public  void enterResetConfiguration (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ResetConfigurationContext ctx)  { throw new RuntimeException(); }
  static public  void exitResetConfiguration (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ResetConfigurationContext ctx)  { throw new RuntimeException(); }
  static public  void enterUnsupportedHiveNativeCommands (org.apache.spark.sql.catalyst.parser.SqlBaseParser.UnsupportedHiveNativeCommandsContext ctx)  { throw new RuntimeException(); }
  static public  void exitUnsupportedHiveNativeCommands (org.apache.spark.sql.catalyst.parser.SqlBaseParser.UnsupportedHiveNativeCommandsContext ctx)  { throw new RuntimeException(); }
  static public  void enterCreateTableHeader (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateTableHeaderContext ctx)  { throw new RuntimeException(); }
  static public  void exitCreateTableHeader (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateTableHeaderContext ctx)  { throw new RuntimeException(); }
  static public  void enterBucketSpec (org.apache.spark.sql.catalyst.parser.SqlBaseParser.BucketSpecContext ctx)  { throw new RuntimeException(); }
  static public  void exitBucketSpec (org.apache.spark.sql.catalyst.parser.SqlBaseParser.BucketSpecContext ctx)  { throw new RuntimeException(); }
  static public  void enterSkewSpec (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SkewSpecContext ctx)  { throw new RuntimeException(); }
  static public  void exitSkewSpec (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SkewSpecContext ctx)  { throw new RuntimeException(); }
  static public  void enterLocationSpec (org.apache.spark.sql.catalyst.parser.SqlBaseParser.LocationSpecContext ctx)  { throw new RuntimeException(); }
  static public  void exitLocationSpec (org.apache.spark.sql.catalyst.parser.SqlBaseParser.LocationSpecContext ctx)  { throw new RuntimeException(); }
  static public  void enterQuery (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QueryContext ctx)  { throw new RuntimeException(); }
  static public  void exitQuery (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QueryContext ctx)  { throw new RuntimeException(); }
  static public  void enterInsertInto (org.apache.spark.sql.catalyst.parser.SqlBaseParser.InsertIntoContext ctx)  { throw new RuntimeException(); }
  static public  void exitInsertInto (org.apache.spark.sql.catalyst.parser.SqlBaseParser.InsertIntoContext ctx)  { throw new RuntimeException(); }
  static public  void enterPartitionSpecLocation (org.apache.spark.sql.catalyst.parser.SqlBaseParser.PartitionSpecLocationContext ctx)  { throw new RuntimeException(); }
  static public  void exitPartitionSpecLocation (org.apache.spark.sql.catalyst.parser.SqlBaseParser.PartitionSpecLocationContext ctx)  { throw new RuntimeException(); }
  static public  void enterPartitionSpec (org.apache.spark.sql.catalyst.parser.SqlBaseParser.PartitionSpecContext ctx)  { throw new RuntimeException(); }
  static public  void exitPartitionSpec (org.apache.spark.sql.catalyst.parser.SqlBaseParser.PartitionSpecContext ctx)  { throw new RuntimeException(); }
  static public  void enterPartitionVal (org.apache.spark.sql.catalyst.parser.SqlBaseParser.PartitionValContext ctx)  { throw new RuntimeException(); }
  static public  void exitPartitionVal (org.apache.spark.sql.catalyst.parser.SqlBaseParser.PartitionValContext ctx)  { throw new RuntimeException(); }
  static public  void enterDescribeFuncName (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DescribeFuncNameContext ctx)  { throw new RuntimeException(); }
  static public  void exitDescribeFuncName (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DescribeFuncNameContext ctx)  { throw new RuntimeException(); }
  static public  void enterDescribeColName (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DescribeColNameContext ctx)  { throw new RuntimeException(); }
  static public  void exitDescribeColName (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DescribeColNameContext ctx)  { throw new RuntimeException(); }
  static public  void enterCtes (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CtesContext ctx)  { throw new RuntimeException(); }
  static public  void exitCtes (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CtesContext ctx)  { throw new RuntimeException(); }
  static public  void enterNamedQuery (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NamedQueryContext ctx)  { throw new RuntimeException(); }
  static public  void exitNamedQuery (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NamedQueryContext ctx)  { throw new RuntimeException(); }
  static public  void enterTableProvider (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TableProviderContext ctx)  { throw new RuntimeException(); }
  static public  void exitTableProvider (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TableProviderContext ctx)  { throw new RuntimeException(); }
  static public  void enterTablePropertyList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TablePropertyListContext ctx)  { throw new RuntimeException(); }
  static public  void exitTablePropertyList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TablePropertyListContext ctx)  { throw new RuntimeException(); }
  static public  void enterTableProperty (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TablePropertyContext ctx)  { throw new RuntimeException(); }
  static public  void exitTableProperty (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TablePropertyContext ctx)  { throw new RuntimeException(); }
  static public  void enterTablePropertyKey (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TablePropertyKeyContext ctx)  { throw new RuntimeException(); }
  static public  void exitTablePropertyKey (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TablePropertyKeyContext ctx)  { throw new RuntimeException(); }
  static public  void enterTablePropertyValue (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TablePropertyValueContext ctx)  { throw new RuntimeException(); }
  static public  void exitTablePropertyValue (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TablePropertyValueContext ctx)  { throw new RuntimeException(); }
  static public  void enterConstantList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ConstantListContext ctx)  { throw new RuntimeException(); }
  static public  void exitConstantList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ConstantListContext ctx)  { throw new RuntimeException(); }
  static public  void enterNestedConstantList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NestedConstantListContext ctx)  { throw new RuntimeException(); }
  static public  void exitNestedConstantList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NestedConstantListContext ctx)  { throw new RuntimeException(); }
  static public  void enterCreateFileFormat (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateFileFormatContext ctx)  { throw new RuntimeException(); }
  static public  void exitCreateFileFormat (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CreateFileFormatContext ctx)  { throw new RuntimeException(); }
  static public  void enterTableFileFormat (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TableFileFormatContext ctx)  { throw new RuntimeException(); }
  static public  void exitTableFileFormat (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TableFileFormatContext ctx)  { throw new RuntimeException(); }
  static public  void enterGenericFileFormat (org.apache.spark.sql.catalyst.parser.SqlBaseParser.GenericFileFormatContext ctx)  { throw new RuntimeException(); }
  static public  void exitGenericFileFormat (org.apache.spark.sql.catalyst.parser.SqlBaseParser.GenericFileFormatContext ctx)  { throw new RuntimeException(); }
  static public  void enterStorageHandler (org.apache.spark.sql.catalyst.parser.SqlBaseParser.StorageHandlerContext ctx)  { throw new RuntimeException(); }
  static public  void exitStorageHandler (org.apache.spark.sql.catalyst.parser.SqlBaseParser.StorageHandlerContext ctx)  { throw new RuntimeException(); }
  static public  void enterResource (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ResourceContext ctx)  { throw new RuntimeException(); }
  static public  void exitResource (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ResourceContext ctx)  { throw new RuntimeException(); }
  static public  void enterSingleInsertQuery (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SingleInsertQueryContext ctx)  { throw new RuntimeException(); }
  static public  void exitSingleInsertQuery (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SingleInsertQueryContext ctx)  { throw new RuntimeException(); }
  static public  void enterMultiInsertQuery (org.apache.spark.sql.catalyst.parser.SqlBaseParser.MultiInsertQueryContext ctx)  { throw new RuntimeException(); }
  static public  void exitMultiInsertQuery (org.apache.spark.sql.catalyst.parser.SqlBaseParser.MultiInsertQueryContext ctx)  { throw new RuntimeException(); }
  static public  void enterQueryOrganization (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QueryOrganizationContext ctx)  { throw new RuntimeException(); }
  static public  void exitQueryOrganization (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QueryOrganizationContext ctx)  { throw new RuntimeException(); }
  static public  void enterMultiInsertQueryBody (org.apache.spark.sql.catalyst.parser.SqlBaseParser.MultiInsertQueryBodyContext ctx)  { throw new RuntimeException(); }
  static public  void exitMultiInsertQueryBody (org.apache.spark.sql.catalyst.parser.SqlBaseParser.MultiInsertQueryBodyContext ctx)  { throw new RuntimeException(); }
  static public  void enterQueryTermDefault (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QueryTermDefaultContext ctx)  { throw new RuntimeException(); }
  static public  void exitQueryTermDefault (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QueryTermDefaultContext ctx)  { throw new RuntimeException(); }
  static public  void enterSetOperation (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SetOperationContext ctx)  { throw new RuntimeException(); }
  static public  void exitSetOperation (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SetOperationContext ctx)  { throw new RuntimeException(); }
  static public  void enterQueryPrimaryDefault (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QueryPrimaryDefaultContext ctx)  { throw new RuntimeException(); }
  static public  void exitQueryPrimaryDefault (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QueryPrimaryDefaultContext ctx)  { throw new RuntimeException(); }
  static public  void enterTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TableContext ctx)  { throw new RuntimeException(); }
  static public  void exitTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TableContext ctx)  { throw new RuntimeException(); }
  static public  void enterInlineTableDefault1 (org.apache.spark.sql.catalyst.parser.SqlBaseParser.InlineTableDefault1Context ctx)  { throw new RuntimeException(); }
  static public  void exitInlineTableDefault1 (org.apache.spark.sql.catalyst.parser.SqlBaseParser.InlineTableDefault1Context ctx)  { throw new RuntimeException(); }
  static public  void enterSubquery (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SubqueryContext ctx)  { throw new RuntimeException(); }
  static public  void exitSubquery (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SubqueryContext ctx)  { throw new RuntimeException(); }
  static public  void enterSortItem (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SortItemContext ctx)  { throw new RuntimeException(); }
  static public  void exitSortItem (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SortItemContext ctx)  { throw new RuntimeException(); }
  static public  void enterQuerySpecification (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QuerySpecificationContext ctx)  { throw new RuntimeException(); }
  static public  void exitQuerySpecification (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QuerySpecificationContext ctx)  { throw new RuntimeException(); }
  static public  void enterHint (org.apache.spark.sql.catalyst.parser.SqlBaseParser.HintContext ctx)  { throw new RuntimeException(); }
  static public  void exitHint (org.apache.spark.sql.catalyst.parser.SqlBaseParser.HintContext ctx)  { throw new RuntimeException(); }
  static public  void enterHintStatement (org.apache.spark.sql.catalyst.parser.SqlBaseParser.HintStatementContext ctx)  { throw new RuntimeException(); }
  static public  void exitHintStatement (org.apache.spark.sql.catalyst.parser.SqlBaseParser.HintStatementContext ctx)  { throw new RuntimeException(); }
  static public  void enterFromClause (org.apache.spark.sql.catalyst.parser.SqlBaseParser.FromClauseContext ctx)  { throw new RuntimeException(); }
  static public  void exitFromClause (org.apache.spark.sql.catalyst.parser.SqlBaseParser.FromClauseContext ctx)  { throw new RuntimeException(); }
  static public  void enterAggregation (org.apache.spark.sql.catalyst.parser.SqlBaseParser.AggregationContext ctx)  { throw new RuntimeException(); }
  static public  void exitAggregation (org.apache.spark.sql.catalyst.parser.SqlBaseParser.AggregationContext ctx)  { throw new RuntimeException(); }
  static public  void enterGroupingSet (org.apache.spark.sql.catalyst.parser.SqlBaseParser.GroupingSetContext ctx)  { throw new RuntimeException(); }
  static public  void exitGroupingSet (org.apache.spark.sql.catalyst.parser.SqlBaseParser.GroupingSetContext ctx)  { throw new RuntimeException(); }
  static public  void enterLateralView (org.apache.spark.sql.catalyst.parser.SqlBaseParser.LateralViewContext ctx)  { throw new RuntimeException(); }
  static public  void exitLateralView (org.apache.spark.sql.catalyst.parser.SqlBaseParser.LateralViewContext ctx)  { throw new RuntimeException(); }
  static public  void enterSetQuantifier (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SetQuantifierContext ctx)  { throw new RuntimeException(); }
  static public  void exitSetQuantifier (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SetQuantifierContext ctx)  { throw new RuntimeException(); }
  static public  void enterRelation (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RelationContext ctx)  { throw new RuntimeException(); }
  static public  void exitRelation (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RelationContext ctx)  { throw new RuntimeException(); }
  static public  void enterJoinRelation (org.apache.spark.sql.catalyst.parser.SqlBaseParser.JoinRelationContext ctx)  { throw new RuntimeException(); }
  static public  void exitJoinRelation (org.apache.spark.sql.catalyst.parser.SqlBaseParser.JoinRelationContext ctx)  { throw new RuntimeException(); }
  static public  void enterJoinType (org.apache.spark.sql.catalyst.parser.SqlBaseParser.JoinTypeContext ctx)  { throw new RuntimeException(); }
  static public  void exitJoinType (org.apache.spark.sql.catalyst.parser.SqlBaseParser.JoinTypeContext ctx)  { throw new RuntimeException(); }
  static public  void enterJoinCriteria (org.apache.spark.sql.catalyst.parser.SqlBaseParser.JoinCriteriaContext ctx)  { throw new RuntimeException(); }
  static public  void exitJoinCriteria (org.apache.spark.sql.catalyst.parser.SqlBaseParser.JoinCriteriaContext ctx)  { throw new RuntimeException(); }
  static public  void enterSample (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SampleContext ctx)  { throw new RuntimeException(); }
  static public  void exitSample (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SampleContext ctx)  { throw new RuntimeException(); }
  static public  void enterIdentifierList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IdentifierListContext ctx)  { throw new RuntimeException(); }
  static public  void exitIdentifierList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IdentifierListContext ctx)  { throw new RuntimeException(); }
  static public  void enterIdentifierSeq (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IdentifierSeqContext ctx)  { throw new RuntimeException(); }
  static public  void exitIdentifierSeq (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IdentifierSeqContext ctx)  { throw new RuntimeException(); }
  static public  void enterOrderedIdentifierList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.OrderedIdentifierListContext ctx)  { throw new RuntimeException(); }
  static public  void exitOrderedIdentifierList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.OrderedIdentifierListContext ctx)  { throw new RuntimeException(); }
  static public  void enterOrderedIdentifier (org.apache.spark.sql.catalyst.parser.SqlBaseParser.OrderedIdentifierContext ctx)  { throw new RuntimeException(); }
  static public  void exitOrderedIdentifier (org.apache.spark.sql.catalyst.parser.SqlBaseParser.OrderedIdentifierContext ctx)  { throw new RuntimeException(); }
  static public  void enterIdentifierCommentList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IdentifierCommentListContext ctx)  { throw new RuntimeException(); }
  static public  void exitIdentifierCommentList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IdentifierCommentListContext ctx)  { throw new RuntimeException(); }
  static public  void enterIdentifierComment (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IdentifierCommentContext ctx)  { throw new RuntimeException(); }
  static public  void exitIdentifierComment (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IdentifierCommentContext ctx)  { throw new RuntimeException(); }
  static public  void enterTableName (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TableNameContext ctx)  { throw new RuntimeException(); }
  static public  void exitTableName (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TableNameContext ctx)  { throw new RuntimeException(); }
  static public  void enterAliasedQuery (org.apache.spark.sql.catalyst.parser.SqlBaseParser.AliasedQueryContext ctx)  { throw new RuntimeException(); }
  static public  void exitAliasedQuery (org.apache.spark.sql.catalyst.parser.SqlBaseParser.AliasedQueryContext ctx)  { throw new RuntimeException(); }
  static public  void enterAliasedRelation (org.apache.spark.sql.catalyst.parser.SqlBaseParser.AliasedRelationContext ctx)  { throw new RuntimeException(); }
  static public  void exitAliasedRelation (org.apache.spark.sql.catalyst.parser.SqlBaseParser.AliasedRelationContext ctx)  { throw new RuntimeException(); }
  static public  void enterInlineTableDefault2 (org.apache.spark.sql.catalyst.parser.SqlBaseParser.InlineTableDefault2Context ctx)  { throw new RuntimeException(); }
  static public  void exitInlineTableDefault2 (org.apache.spark.sql.catalyst.parser.SqlBaseParser.InlineTableDefault2Context ctx)  { throw new RuntimeException(); }
  static public  void enterTableValuedFunction (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TableValuedFunctionContext ctx)  { throw new RuntimeException(); }
  static public  void exitTableValuedFunction (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TableValuedFunctionContext ctx)  { throw new RuntimeException(); }
  static public  void enterInlineTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.InlineTableContext ctx)  { throw new RuntimeException(); }
  static public  void exitInlineTable (org.apache.spark.sql.catalyst.parser.SqlBaseParser.InlineTableContext ctx)  { throw new RuntimeException(); }
  static public  void enterRowFormatSerde (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RowFormatSerdeContext ctx)  { throw new RuntimeException(); }
  static public  void exitRowFormatSerde (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RowFormatSerdeContext ctx)  { throw new RuntimeException(); }
  static public  void enterRowFormatDelimited (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RowFormatDelimitedContext ctx)  { throw new RuntimeException(); }
  static public  void exitRowFormatDelimited (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RowFormatDelimitedContext ctx)  { throw new RuntimeException(); }
  static public  void enterTableIdentifier (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TableIdentifierContext ctx)  { throw new RuntimeException(); }
  static public  void exitTableIdentifier (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TableIdentifierContext ctx)  { throw new RuntimeException(); }
  static public  void enterNamedExpression (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NamedExpressionContext ctx)  { throw new RuntimeException(); }
  static public  void exitNamedExpression (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NamedExpressionContext ctx)  { throw new RuntimeException(); }
  static public  void enterNamedExpressionSeq (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NamedExpressionSeqContext ctx)  { throw new RuntimeException(); }
  static public  void exitNamedExpressionSeq (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NamedExpressionSeqContext ctx)  { throw new RuntimeException(); }
  static public  void enterExpression (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ExpressionContext ctx)  { throw new RuntimeException(); }
  static public  void exitExpression (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ExpressionContext ctx)  { throw new RuntimeException(); }
  static public  void enterLogicalNot (org.apache.spark.sql.catalyst.parser.SqlBaseParser.LogicalNotContext ctx)  { throw new RuntimeException(); }
  static public  void exitLogicalNot (org.apache.spark.sql.catalyst.parser.SqlBaseParser.LogicalNotContext ctx)  { throw new RuntimeException(); }
  static public  void enterBooleanDefault (org.apache.spark.sql.catalyst.parser.SqlBaseParser.BooleanDefaultContext ctx)  { throw new RuntimeException(); }
  static public  void exitBooleanDefault (org.apache.spark.sql.catalyst.parser.SqlBaseParser.BooleanDefaultContext ctx)  { throw new RuntimeException(); }
  static public  void enterExists (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ExistsContext ctx)  { throw new RuntimeException(); }
  static public  void exitExists (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ExistsContext ctx)  { throw new RuntimeException(); }
  static public  void enterLogicalBinary (org.apache.spark.sql.catalyst.parser.SqlBaseParser.LogicalBinaryContext ctx)  { throw new RuntimeException(); }
  static public  void exitLogicalBinary (org.apache.spark.sql.catalyst.parser.SqlBaseParser.LogicalBinaryContext ctx)  { throw new RuntimeException(); }
  static public  void enterPredicated (org.apache.spark.sql.catalyst.parser.SqlBaseParser.PredicatedContext ctx)  { throw new RuntimeException(); }
  static public  void exitPredicated (org.apache.spark.sql.catalyst.parser.SqlBaseParser.PredicatedContext ctx)  { throw new RuntimeException(); }
  static public  void enterPredicate (org.apache.spark.sql.catalyst.parser.SqlBaseParser.PredicateContext ctx)  { throw new RuntimeException(); }
  static public  void exitPredicate (org.apache.spark.sql.catalyst.parser.SqlBaseParser.PredicateContext ctx)  { throw new RuntimeException(); }
  static public  void enterValueExpressionDefault (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ValueExpressionDefaultContext ctx)  { throw new RuntimeException(); }
  static public  void exitValueExpressionDefault (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ValueExpressionDefaultContext ctx)  { throw new RuntimeException(); }
  static public  void enterComparison (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ComparisonContext ctx)  { throw new RuntimeException(); }
  static public  void exitComparison (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ComparisonContext ctx)  { throw new RuntimeException(); }
  static public  void enterArithmeticBinary (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ArithmeticBinaryContext ctx)  { throw new RuntimeException(); }
  static public  void exitArithmeticBinary (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ArithmeticBinaryContext ctx)  { throw new RuntimeException(); }
  static public  void enterArithmeticUnary (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ArithmeticUnaryContext ctx)  { throw new RuntimeException(); }
  static public  void exitArithmeticUnary (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ArithmeticUnaryContext ctx)  { throw new RuntimeException(); }
  static public  void enterDereference (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DereferenceContext ctx)  { throw new RuntimeException(); }
  static public  void exitDereference (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DereferenceContext ctx)  { throw new RuntimeException(); }
  static public  void enterSimpleCase (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SimpleCaseContext ctx)  { throw new RuntimeException(); }
  static public  void exitSimpleCase (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SimpleCaseContext ctx)  { throw new RuntimeException(); }
  static public  void enterColumnReference (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ColumnReferenceContext ctx)  { throw new RuntimeException(); }
  static public  void exitColumnReference (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ColumnReferenceContext ctx)  { throw new RuntimeException(); }
  static public  void enterRowConstructor (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RowConstructorContext ctx)  { throw new RuntimeException(); }
  static public  void exitRowConstructor (org.apache.spark.sql.catalyst.parser.SqlBaseParser.RowConstructorContext ctx)  { throw new RuntimeException(); }
  static public  void enterStar (org.apache.spark.sql.catalyst.parser.SqlBaseParser.StarContext ctx)  { throw new RuntimeException(); }
  static public  void exitStar (org.apache.spark.sql.catalyst.parser.SqlBaseParser.StarContext ctx)  { throw new RuntimeException(); }
  static public  void enterSubscript (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SubscriptContext ctx)  { throw new RuntimeException(); }
  static public  void exitSubscript (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SubscriptContext ctx)  { throw new RuntimeException(); }
  static public  void enterTimeFunctionCall (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TimeFunctionCallContext ctx)  { throw new RuntimeException(); }
  static public  void exitTimeFunctionCall (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TimeFunctionCallContext ctx)  { throw new RuntimeException(); }
  static public  void enterSubqueryExpression (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SubqueryExpressionContext ctx)  { throw new RuntimeException(); }
  static public  void exitSubqueryExpression (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SubqueryExpressionContext ctx)  { throw new RuntimeException(); }
  static public  void enterCast (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CastContext ctx)  { throw new RuntimeException(); }
  static public  void exitCast (org.apache.spark.sql.catalyst.parser.SqlBaseParser.CastContext ctx)  { throw new RuntimeException(); }
  static public  void enterConstantDefault (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ConstantDefaultContext ctx)  { throw new RuntimeException(); }
  static public  void exitConstantDefault (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ConstantDefaultContext ctx)  { throw new RuntimeException(); }
  static public  void enterParenthesizedExpression (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ParenthesizedExpressionContext ctx)  { throw new RuntimeException(); }
  static public  void exitParenthesizedExpression (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ParenthesizedExpressionContext ctx)  { throw new RuntimeException(); }
  static public  void enterFunctionCall (org.apache.spark.sql.catalyst.parser.SqlBaseParser.FunctionCallContext ctx)  { throw new RuntimeException(); }
  static public  void exitFunctionCall (org.apache.spark.sql.catalyst.parser.SqlBaseParser.FunctionCallContext ctx)  { throw new RuntimeException(); }
  static public  void enterSearchedCase (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SearchedCaseContext ctx)  { throw new RuntimeException(); }
  static public  void exitSearchedCase (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SearchedCaseContext ctx)  { throw new RuntimeException(); }
  static public  void enterNullLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NullLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void exitNullLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NullLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void enterIntervalLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IntervalLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void exitIntervalLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IntervalLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void enterTypeConstructor (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TypeConstructorContext ctx)  { throw new RuntimeException(); }
  static public  void exitTypeConstructor (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TypeConstructorContext ctx)  { throw new RuntimeException(); }
  static public  void enterNumericLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NumericLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void exitNumericLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NumericLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void enterBooleanLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.BooleanLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void exitBooleanLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.BooleanLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void enterStringLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.StringLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void exitStringLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.StringLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void enterComparisonOperator (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ComparisonOperatorContext ctx)  { throw new RuntimeException(); }
  static public  void exitComparisonOperator (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ComparisonOperatorContext ctx)  { throw new RuntimeException(); }
  static public  void enterArithmeticOperator (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ArithmeticOperatorContext ctx)  { throw new RuntimeException(); }
  static public  void exitArithmeticOperator (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ArithmeticOperatorContext ctx)  { throw new RuntimeException(); }
  static public  void enterPredicateOperator (org.apache.spark.sql.catalyst.parser.SqlBaseParser.PredicateOperatorContext ctx)  { throw new RuntimeException(); }
  static public  void exitPredicateOperator (org.apache.spark.sql.catalyst.parser.SqlBaseParser.PredicateOperatorContext ctx)  { throw new RuntimeException(); }
  static public  void enterBooleanValue (org.apache.spark.sql.catalyst.parser.SqlBaseParser.BooleanValueContext ctx)  { throw new RuntimeException(); }
  static public  void exitBooleanValue (org.apache.spark.sql.catalyst.parser.SqlBaseParser.BooleanValueContext ctx)  { throw new RuntimeException(); }
  static public  void enterInterval (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IntervalContext ctx)  { throw new RuntimeException(); }
  static public  void exitInterval (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IntervalContext ctx)  { throw new RuntimeException(); }
  static public  void enterIntervalField (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IntervalFieldContext ctx)  { throw new RuntimeException(); }
  static public  void exitIntervalField (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IntervalFieldContext ctx)  { throw new RuntimeException(); }
  static public  void enterIntervalValue (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IntervalValueContext ctx)  { throw new RuntimeException(); }
  static public  void exitIntervalValue (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IntervalValueContext ctx)  { throw new RuntimeException(); }
  static public  void enterColPosition (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ColPositionContext ctx)  { throw new RuntimeException(); }
  static public  void exitColPosition (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ColPositionContext ctx)  { throw new RuntimeException(); }
  static public  void enterComplexDataType (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ComplexDataTypeContext ctx)  { throw new RuntimeException(); }
  static public  void exitComplexDataType (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ComplexDataTypeContext ctx)  { throw new RuntimeException(); }
  static public  void enterPrimitiveDataType (org.apache.spark.sql.catalyst.parser.SqlBaseParser.PrimitiveDataTypeContext ctx)  { throw new RuntimeException(); }
  static public  void exitPrimitiveDataType (org.apache.spark.sql.catalyst.parser.SqlBaseParser.PrimitiveDataTypeContext ctx)  { throw new RuntimeException(); }
  static public  void enterColTypeList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ColTypeListContext ctx)  { throw new RuntimeException(); }
  static public  void exitColTypeList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ColTypeListContext ctx)  { throw new RuntimeException(); }
  static public  void enterColType (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ColTypeContext ctx)  { throw new RuntimeException(); }
  static public  void exitColType (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ColTypeContext ctx)  { throw new RuntimeException(); }
  static public  void enterComplexColTypeList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ComplexColTypeListContext ctx)  { throw new RuntimeException(); }
  static public  void exitComplexColTypeList (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ComplexColTypeListContext ctx)  { throw new RuntimeException(); }
  static public  void enterComplexColType (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ComplexColTypeContext ctx)  { throw new RuntimeException(); }
  static public  void exitComplexColType (org.apache.spark.sql.catalyst.parser.SqlBaseParser.ComplexColTypeContext ctx)  { throw new RuntimeException(); }
  static public  void enterWhenClause (org.apache.spark.sql.catalyst.parser.SqlBaseParser.WhenClauseContext ctx)  { throw new RuntimeException(); }
  static public  void exitWhenClause (org.apache.spark.sql.catalyst.parser.SqlBaseParser.WhenClauseContext ctx)  { throw new RuntimeException(); }
  static public  void enterWindows (org.apache.spark.sql.catalyst.parser.SqlBaseParser.WindowsContext ctx)  { throw new RuntimeException(); }
  static public  void exitWindows (org.apache.spark.sql.catalyst.parser.SqlBaseParser.WindowsContext ctx)  { throw new RuntimeException(); }
  static public  void enterNamedWindow (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NamedWindowContext ctx)  { throw new RuntimeException(); }
  static public  void exitNamedWindow (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NamedWindowContext ctx)  { throw new RuntimeException(); }
  static public  void enterWindowRef (org.apache.spark.sql.catalyst.parser.SqlBaseParser.WindowRefContext ctx)  { throw new RuntimeException(); }
  static public  void exitWindowRef (org.apache.spark.sql.catalyst.parser.SqlBaseParser.WindowRefContext ctx)  { throw new RuntimeException(); }
  static public  void enterWindowDef (org.apache.spark.sql.catalyst.parser.SqlBaseParser.WindowDefContext ctx)  { throw new RuntimeException(); }
  static public  void exitWindowDef (org.apache.spark.sql.catalyst.parser.SqlBaseParser.WindowDefContext ctx)  { throw new RuntimeException(); }
  static public  void enterWindowFrame (org.apache.spark.sql.catalyst.parser.SqlBaseParser.WindowFrameContext ctx)  { throw new RuntimeException(); }
  static public  void exitWindowFrame (org.apache.spark.sql.catalyst.parser.SqlBaseParser.WindowFrameContext ctx)  { throw new RuntimeException(); }
  static public  void enterFrameBound (org.apache.spark.sql.catalyst.parser.SqlBaseParser.FrameBoundContext ctx)  { throw new RuntimeException(); }
  static public  void exitFrameBound (org.apache.spark.sql.catalyst.parser.SqlBaseParser.FrameBoundContext ctx)  { throw new RuntimeException(); }
  static public  void enterQualifiedName (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QualifiedNameContext ctx)  { throw new RuntimeException(); }
  static public  void exitQualifiedName (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QualifiedNameContext ctx)  { throw new RuntimeException(); }
  static public  void enterIdentifier (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IdentifierContext ctx)  { throw new RuntimeException(); }
  static public  void exitIdentifier (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IdentifierContext ctx)  { throw new RuntimeException(); }
  static public  void enterUnquotedIdentifier (org.apache.spark.sql.catalyst.parser.SqlBaseParser.UnquotedIdentifierContext ctx)  { throw new RuntimeException(); }
  static public  void exitUnquotedIdentifier (org.apache.spark.sql.catalyst.parser.SqlBaseParser.UnquotedIdentifierContext ctx)  { throw new RuntimeException(); }
  static public  void enterQuotedIdentifierAlternative (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QuotedIdentifierAlternativeContext ctx)  { throw new RuntimeException(); }
  static public  void exitQuotedIdentifierAlternative (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QuotedIdentifierAlternativeContext ctx)  { throw new RuntimeException(); }
  static public  void enterQuotedIdentifier (org.apache.spark.sql.catalyst.parser.SqlBaseParser.QuotedIdentifierContext ctx)  { throw new RuntimeException(); }
  static public  void enterDecimalLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DecimalLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void exitDecimalLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DecimalLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void enterIntegerLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IntegerLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void exitIntegerLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.IntegerLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void enterBigIntLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.BigIntLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void exitBigIntLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.BigIntLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void enterSmallIntLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SmallIntLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void exitSmallIntLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.SmallIntLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void enterTinyIntLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TinyIntLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void exitTinyIntLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.TinyIntLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void enterDoubleLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DoubleLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void exitDoubleLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.DoubleLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void enterBigDecimalLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.BigDecimalLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void exitBigDecimalLiteral (org.apache.spark.sql.catalyst.parser.SqlBaseParser.BigDecimalLiteralContext ctx)  { throw new RuntimeException(); }
  static public  void enterNonReserved (org.apache.spark.sql.catalyst.parser.SqlBaseParser.NonReservedContext ctx)  { throw new RuntimeException(); }
  static public  void enterEveryRule (org.antlr.v4.runtime.ParserRuleContext ctx)  { throw new RuntimeException(); }
  static public  void exitEveryRule (org.antlr.v4.runtime.ParserRuleContext ctx)  { throw new RuntimeException(); }
  static public  void visitTerminal (org.antlr.v4.runtime.tree.TerminalNode node)  { throw new RuntimeException(); }
  static public  void visitErrorNode (org.antlr.v4.runtime.tree.ErrorNode node)  { throw new RuntimeException(); }
  static public abstract  boolean canEqual (Object that)  ;
  static public abstract  boolean equals (Object that)  ;
  static public abstract  Object productElement (int n)  ;
  static public abstract  int productArity ()  ;
  static public  scala.collection.Iterator<java.lang.Object> productIterator ()  { throw new RuntimeException(); }
  static public  java.lang.String productPrefix ()  { throw new RuntimeException(); }
}
